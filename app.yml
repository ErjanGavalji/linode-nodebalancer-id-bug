apiVersion: v1
kind: ConfigMap
metadata:
  namespace: main-app
  name: nodejs-config
data:
  server.mjs: |
    import express from 'express';

    const app = express();
    const port = 3000;

    app.get('/', (req, res) => {
      res.send(`Hello! Current server time is: ${new Date().toISOString()}`);
    });

    app.listen(port, () => {
      console.log(`Server running at http://localhost:${port}`);
    });
  start.sh: |
    #!/bin/bash
    cp /configmap/server.mjs /app/server.mjs
    chmod +x /app/server.mjs
    cd /app
    npm init -y
    npm install express
    node server.mjs

---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: main-app
  name: nodejs-app
  labels:
    app: nodejs-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nodejs-app
  template:
    metadata:
      labels:
        app: nodejs-app
    spec:
      initContainers:
        - name: init-copy
          image: busybox
          command: 
            - "sh"
            - "-c"
            - |
              cp -L /configmap/start.sh /app/start.sh
              cp -L /configmap/server.mjs /app/server.mjs
              chmod u+x /app/start.sh
              chmod -R 777 /app
          volumeMounts:
            - name: config-volume
              mountPath: /configmap
            - name: app-volume
              mountPath: /app
      containers:
        - name: nodejs-container
          image: node:22.14.0
          command:
            - "/app/start.sh"
          volumeMounts:
            - name: app-volume
              mountPath: /app
      volumes:
        - name: config-volume
          configMap:
            name: nodejs-config
        - name: app-volume
          emptyDir: {}

---

apiVersion: v1
kind: Service
metadata:
  name: nodejs-app-service
  namespace: main-app
spec:
  selector:
    app: nodejs-app
  ports:
  - protocol: TCP
    port: 3000
    targetPort: 3000
